@model RegisterModel
@using Nop.Web.Models.Customer;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
}
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
    </script>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="page registration-page">
        <div class="page-title">
            <h1>@T("Account.Register")</h1>
        </div>
        <div class="page-body">
            @{
                var validationSummary = Html.ValidationSummary(true);
            }
            @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
            {
                <div class="message-error">@validationSummary</div>
            }
            @Html.Partial("_ExternalAuthentication.AssociateMessage")
            <div class="fieldset">
                <div class="title">
                    <strong>@T("Account.YourPersonalDetails")</strong>
                </div>
                <div class="form-fields">
                    <div class="inputs">
                        @Html.LabelFor(model => model.FirstName, new { }, ":")
                        @Html.EditorFor(model => model.FirstName)
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                    <div class="inputs">
                        @Html.LabelFor(model => model.LastName, new { }, ":")
                        @Html.EditorFor(model => model.LastName)
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>
                    <div class="inputs">
                        @Html.LabelFor(model => model.Email, new { }, ":")
                        @Html.EditorFor(model => model.Email)
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                    @if (Model.StreetAddressEnabled)
                    {
                        <div class="inputs">
                            @Html.LabelFor(model => model.StreetAddress, new { }, ":")
                            @Html.EditorFor(model => model.StreetAddress)
                            @if (Model.StreetAddressRequired)
                            {
                                @Html.RequiredHint()
                            }
                            @Html.ValidationMessageFor(model => model.StreetAddress)
                        </div>
                    }
                    @if (Model.PhoneEnabled)
                    {
                        <div class="inputs">
                            @Html.LabelFor(model => model.Phone, new { }, ":")
                            @Html.EditorFor(model => model.Phone)
                            @if (Model.PhoneRequired)
                            {
                                @Html.RequiredHint()
                            }
                            @Html.ValidationMessageFor(model => model.Phone)
                        </div>
                    }
                    <div class="inputs">
                        @Html.LabelFor(model => model.Password, new { }, ":")
                        @Html.EditorFor(model => model.Password)
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.Password)
                    </div>
                    <div class="inputs">
                        @Html.LabelFor(model => model.ConfirmPassword, new { }, ":")
                        @Html.EditorFor(model => model.ConfirmPassword)
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.ConfirmPassword)
                    </div>
                    @if (Model.DisplayCaptcha)
                    {
                        <div class="captcha-box">
                            @Html.Raw(Html.GenerateCaptcha())
                        </div>
                    }
                    @if (Model.HoneypotEnabled)
                    {
                        @Html.Raw(Html.GenerateHoneypotInput())
                    }

                    @if (Model.NewsletterEnabled)
                    {
                        <div class="inputs">
                            @Html.LabelFor(model => model.Newsletter, new { }, ":")
                            @Html.EditorFor(model => model.Newsletter)
                            @Html.ValidationMessageFor(model => model.Newsletter)
                        </div>
                    }

                </div>

                @if (Model.AcceptPrivacyPolicyEnabled)
                {
                    <script type="text/javascript">
                        $(document).ready(function () {
                            $('#register-button').click(function () {
                                if ($('#accept-privacy-policy').is(':checked')) {
                                    //do some stuff
                                    return true;
                                }
                                else {
                                    //just show validation errors, dont post
                                    alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))');
                                    return false;
                                }
                            });
                        });
                    </script>
                    <div class="accept-privacy-policy">
                        <input id="accept-privacy-policy" type="checkbox" name="accept-privacy-policy" />
                        <label for="accept-privacy-policy">@T("Account.Fields.AcceptPrivacyPolicy")</label>
                        <span class="read" onclick="javascript:OpenWindow('@Url.RouteUrl("TopicPopup", new { SystemName = "privacyinfo" })', 450, 500, true)">@T("Account.Fields.AcceptPrivacyPolicy.Read")</span>
                    </div>
                }

            </div>

            <div class="buttons">
                <input type="submit" id="register-button" class="button-1 register-next-step-button" value="@T("Account.Register.Button")" name="register-button" />
            </div>
        </div>
    </div>
                }